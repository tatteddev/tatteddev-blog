---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		
		<main class="terminal-container">
			<div class="terminal-window">
				<div class="terminal-header">
					<div class="terminal-controls">
						<span class="control close"></span>
						<span class="control minimize"></span>
						<span class="control maximize"></span>
					</div>
					<div class="terminal-title">terminal@tatteddev:~</div>
				</div>
				<div class="terminal-body" id="terminal-body">
					<!-- Initial loading state -->
					<div class="terminal-line" id="line-0">
						<span class="loading-text">Initializing system...</span>
					</div>
					<div class="terminal-line" id="line-1" style="display: none;">
						<span class="loading-text">Loading user profile...</span>
					</div>
					<div class="terminal-line" id="line-2" style="display: none;">
						<span class="loading-text">Ready.</span>
					</div>
					
					<!-- Command 1: whoami -->
					<div class="terminal-line" id="cmd-1" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="command" id="whoami-cmd"></span>
						<span class="cursor" id="cursor-1">_</span>
					</div>
					<div class="output" id="output-1" style="display: none;">
						<div class="neon-sign">
							<div class="neon-line top"></div>
							<div class="sign-text">
								<span class="text-blue">T</span><span class="text-pink">A</span><span class="text-blue">TTED</span><span class="text-pink">DEV</span>
							</div>
							<div class="neon-line bottom"></div>
						</div>
					</div>
					
					<!-- Command 2: system status -->
					<div class="terminal-line" id="cmd-2" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="command" id="status-cmd"></span>
						<span class="cursor" id="cursor-2">_</span>
					</div>
					<div class="output system-section" id="output-2" style="display: none;">
						<p class="neon-text">SYSTEM_STATUS: <span class="status-active">ONLINE</span></p>
						<p class="neon-text">USER_TYPE: <span class="highlight">Full-Stack Developer | Digital Creator</span></p>
						<p class="neon-text">LOCATION: <span class="highlight">192.168.1.337</span></p>
						<p class="neon-text">CURRENT_PROJECT: <span class="highlight">HoneyHub | Building tools for creators</span></p>
					</div>
					
					<!-- Command 3: cat about.txt -->
					<div class="terminal-line" id="cmd-3" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="command" id="cat-cmd"></span>
						<span class="cursor" id="cursor-3">_</span>
					</div>
					<div class="output about-section" id="output-3" style="display: none;">
						<div class="about-content">
							<h2 class="neon-glow-pink">[~] About Me</h2>
							<p>This blog is a digital lab where I explore the things I'm most obsessed with.</p>
							<p>It's equal parts <strong>notebook</strong>, <strong>lab</strong>, and <strong>public build log</strong> — a place to capture what I'm learning, ship experiments, and share tools that help along the way.</p>
						</div>
					</div>
					
					<!-- Command 4: cat interests.txt -->
					<div class="terminal-line" id="cmd-4" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="command" id="interests-cmd"></span>
						<span class="cursor" id="cursor-4">_</span>
					</div>
					<div class="output interests-section" id="output-4" style="display: none;">
						<div class="about-content">
							<h2 class="neon-glow-blue">[#] Core Interests & Expertise</h2>
							<p>Expect posts that dive deep into:</p>
							<br />
							<ul class="terminal-list">
								<li><span class="symbol neon-blue">[*]</span> <strong>Software Engineering</strong> — .NET, SQL, Azure, pipelines, and building scalable systems.</li>
								<li><span class="symbol accent-lime">[+]</span> <strong>Game Development</strong> — Unity, indie dev grind, and interactive experiences.</li>
								<li><span class="symbol neon-pink">[#]</span> <strong>3D & Digital Art</strong> — Blender experiments, design workflows, and creative tools.</li>
								<li><span class="symbol accent-purple">[>]</span> <strong>Robotics & Hardware</strong> — tinkering with Arduino, Raspberry Pi, and 3D printing.</li>
								<li><span class="symbol warning">[!]</span> <strong>Security & Hacking</strong> — ethical hacking, penetration testing, cryptography, and red team tactics.</li>
								<li><span class="symbol neon-blue">[?]</span> <strong>AI & Machine Learning</strong> — practical experiments with LLMs and dev productivity.</li>
								<li><span class="symbol accent-lime">[^]</span> <strong>Cloud & Infrastructure</strong> — automation, observability, and the future of DevOps.</li>
								<li><span class="symbol neon-pink">[@]</span> <strong>Knowledge Systems</strong> — better docs, sprints, and ways to organize complexity.</li>
								<li><span class="symbol accent-purple">[$]</span> <strong>Indie Entrepreneurship</strong> — building HoneyHub and tools for creators.</li>
								<li><span class="symbol warning">[~]</span> <strong>Lifestyle & Growth</strong> — personal productivity, fitness, and balancing tech with life.</li>
							</ul>
						</div>
					</div>
					
					<!-- Command 5: recent posts -->
					<div class="terminal-line" id="cmd-5" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="command" id="recent-cmd"></span>
						<span class="cursor" id="cursor-5">_</span>
					</div>
					<div class="output" id="output-5" style="display: none;">
						<p class="directory-listing">./blog/<a href="/blog/using-mdx" class="file-link">using-mdx.mdx</a></p>
						<p class="directory-listing">./blog/<a href="/blog/third-post" class="file-link">third-post.md</a></p>
						<p class="directory-listing">./blog/<a href="/blog/second-post" class="file-link">second-post.md</a></p>
						<p class="directory-listing">./blog/<a href="/blog/first-post" class="file-link">first-post.md</a></p>
						<p class="directory-listing">./blog/<a href="/blog/markdown-style-guide" class="file-link">markdown-style-guide.md</a></p>
						<br />
						<p class="neon-text">→ <a href="/blog" class="file-link">View all posts in ./blog/</a></p>
					</div>
					
					<!-- Final prompt -->
					<div class="terminal-line" id="final-prompt" style="display: none;">
						<span class="prompt">root@tatteddev:~$</span> 
						<span class="cursor cursor-blink">_</span>
					</div>
				</div>
			</div>
		</main>
		<Footer />
		
		<script is:inline>
			// Terminal animation sequence
			let currentStep = 0;
			const commands = [
				{ element: 'whoami-cmd', text: 'whoami', delay: 1500 },
				{ element: 'status-cmd', text: 'systemctl status tatteddev', delay: 1800 },
				{ element: 'cat-cmd', text: 'cat about.txt', delay: 2000 },
				{ element: 'interests-cmd', text: 'cat interests.txt', delay: 2200 },
				{ element: 'recent-cmd', text: 'ls -lt blog/*.md | head -5', delay: 1800 }
			];
			
			function typeText(elementId, text, speed = 100) {
				return new Promise((resolve) => {
					const element = document.getElementById(elementId);
					if (!element) {
						resolve();
						return;
					}
					
					let i = 0;
					const typeInterval = setInterval(() => {
						if (i < text.length) {
							element.textContent += text.charAt(i);
							i++;
						} else {
							clearInterval(typeInterval);
							resolve();
						}
					}, speed);
				});
			}
			
			function showElement(elementId, delay = 0) {
				return new Promise((resolve) => {
					setTimeout(() => {
						const element = document.getElementById(elementId);
						if (element) {
							element.style.display = 'block';
						}
						resolve();
					}, delay);
				});
			}
			
			function hideElement(elementId) {
				const element = document.getElementById(elementId);
				if (element) {
					element.style.display = 'none';
				}
			}
			
			function hideCursor(cursorId) {
				const cursor = document.getElementById(cursorId);
				if (cursor) {
					cursor.style.display = 'none';
				}
			}
			
			function scrollToBottom() {
				window.scrollTo({
					top: document.body.scrollHeight,
					behavior: 'smooth'
				});
			}
			
			async function startAnimation() {
				// Initial loading sequence
				await new Promise(resolve => setTimeout(resolve, 800));
				await showElement('line-1', 600);
				await showElement('line-2', 800);
				
				// Hide loading lines
				setTimeout(() => {
					hideElement('line-0');
					hideElement('line-1');
					hideElement('line-2');
				}, 1200);
				
				// Command 1: whoami
				await showElement('cmd-1', 1500);
				await typeText('whoami-cmd', commands[0].text, 120);
				hideCursor('cursor-1');
				await showElement('output-1', 300);
				
				// Command 2: system status
				await showElement('cmd-2', commands[1].delay);
				await typeText('status-cmd', commands[1].text, 80);
				hideCursor('cursor-2');
				await showElement('output-2', 400);
				
				// Command 3: cat about.txt
				await showElement('cmd-3', commands[2].delay);
				await typeText('cat-cmd', commands[2].text, 100);
				hideCursor('cursor-3');
				await showElement('output-3', 400);
				
				// Command 4: cat interests.txt
				await showElement('cmd-4', commands[3].delay);
				await typeText('interests-cmd', commands[3].text, 95);
				hideCursor('cursor-4');
				await showElement('output-4', 500);
				
				// Command 5: recent posts
				await showElement('cmd-5', commands[4].delay);
				await typeText('recent-cmd', commands[4].text, 70);
				hideCursor('cursor-5');
				await showElement('output-5', 600);
				
				// Final prompt
				await showElement('final-prompt', 1000);
			}
			
			// Start animation when page loads
			window.addEventListener('load', () => {
				setTimeout(startAnimation, 500);
			});
			
			// Make scrollToBottom available globally
			window.scrollToBottom = scrollToBottom;
		</script>
	</body>
</html>

<style>

	
	.terminal-container {
		padding: 2rem 1rem;
		display: flex;
		justify-content: center;
		align-items: flex-start;
		min-height: 80vh;
		position: relative;
		z-index: 1;
	}
	
	.terminal-window {
		background: var(--bg-dark);
		border: 2px solid var(--neon-blue);
		border-radius: 8px;
		box-shadow: 
			0 0 20px rgba(0, 246, 255, 0.3),
			inset 0 0 20px rgba(0, 246, 255, 0.05);
		width: 100%;
		max-width: 900px;
		font-family: 'Courier New', monospace;
		font-size: 14px;
		line-height: 1.4;
	}
	
	.terminal-header {
		background: var(--surface);
		padding: 0.5rem 1rem;
		border-bottom: 1px solid var(--neon-blue);
		display: flex;
		align-items: center;
		gap: 1rem;
		border-radius: 6px 6px 0 0;
	}
	
	.terminal-controls {
		display: flex;
		gap: 0.5rem;
	}
	
	.control {
		width: 12px;
		height: 12px;
		border-radius: 50%;
		cursor: pointer;
	}
	
	.control.close {
		background: #ff5f56;
		box-shadow: 0 0 8px rgba(255, 95, 86, 0.5);
	}
	
	.control.minimize {
		background: #ffbd2e;
		box-shadow: 0 0 8px rgba(255, 189, 46, 0.5);
	}
	
	.control.maximize {
		background: #27ca3f;
		box-shadow: 0 0 8px rgba(39, 202, 63, 0.5);
	}
	
	.terminal-title {
		color: var(--neutral-light);
		font-weight: bold;
		font-size: 12px;
	}
	
	.terminal-body {
		padding: 1.5rem;
		color: var(--neutral-light);
	}
	
	.terminal-line {
		margin-bottom: 0.5rem;
	}
	
	.prompt {
		color: var(--neon-blue);
		text-shadow: 0 0 5px var(--neon-blue);
		font-weight: bold;
	}
	
	.command {
		color: var(--accent-lime);
		margin-left: 0.5rem;
	}
	
	.output {
		margin: 0.5rem 0 1.5rem 0;
		padding-left: 1rem;
		border-left: 2px solid rgba(0, 246, 255, 0.2);
	}
	
	.ascii-art {
		color: var(--neon-pink);
		text-shadow: 0 0 10px var(--neon-pink);
		font-size: 8px;
		line-height: 1;
		margin: 1rem 0;
		overflow-x: auto;
	}
	
	.neon-sign {
		display: flex;
		flex-direction: column;
		align-items: center;
		margin: 2rem 0;
		padding: 1.5rem;
	}
	
	.neon-line {
		width: 100%;
		max-width: 400px;
		height: 3px;
		background: linear-gradient(90deg, 
			transparent 0%, 
			var(--neon-pink) 10%, 
			var(--neon-pink) 90%, 
			transparent 100%
		);
		box-shadow: 
			0 0 4px var(--neon-pink),
			0 0 8px var(--neon-pink),
			0 0 12px var(--neon-pink);
		border-radius: 2px;
		position: relative;
		overflow: hidden;
	}
	
	.neon-line::before {
		content: '';
		position: absolute;
		top: 0;
		left: -100%;
		width: 100%;
		height: 100%;
		background: linear-gradient(90deg, 
			transparent 0%, 
			rgba(255, 255, 255, 0.4) 50%, 
			transparent 100%
		);
		animation: neon-sweep 3s infinite;
	}
	
	.neon-line.top {
		margin-bottom: 1rem;
		animation: neon-flicker 4s infinite;
	}
	
	.neon-line.bottom {
		margin-top: 1rem;
		animation: neon-flicker 5s infinite;
	}
	
	@keyframes neon-sweep {
		0% {
			left: -100%;
		}
		100% {
			left: 100%;
		}
	}
	
	.sign-text {
		font-family: 'Arial', sans-serif;
		font-size: 3rem;
		font-weight: bold;
		letter-spacing: 0.3rem;
		text-transform: uppercase;
		margin: 0;
		text-align: center;
	}
	
	.text-blue {
		color: var(--neon-blue);
		text-shadow: 
			0 0 2px var(--neon-blue),
			0 0 4px var(--neon-blue),
			0 0 8px var(--neon-blue),
			0 0 12px var(--neon-blue),
			0 0 16px var(--neon-blue);
		animation: blue-neon-glow 2s ease-in-out infinite alternate;
		position: relative;
	}
	
	.text-blue::before {
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		color: rgba(0, 246, 255, 0.1);
		text-shadow: none;
		z-index: -1;
		transform: scale(1.02);
	}
	
	.text-pink {
		color: var(--neon-pink);
		text-shadow: 
			0 0 2px var(--neon-pink),
			0 0 4px var(--neon-pink),
			0 0 8px var(--neon-pink),
			0 0 12px var(--neon-pink),
			0 0 16px var(--neon-pink);
		animation: pink-neon-glow 2.5s ease-in-out infinite alternate;
		position: relative;
	}
	
	.text-pink::before {
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		color: rgba(255, 0, 212, 0.1);
		text-shadow: none;
		z-index: -1;
		transform: scale(1.02);
	}
	
	@keyframes neon-flicker {
		0%, 100% {
			opacity: 1;
			box-shadow: 
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink);
		}
		95% {
			opacity: 1;
			box-shadow: 
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink);
		}
		96% {
			opacity: 0.8;
			box-shadow: 
				0 0 2px var(--neon-pink),
				0 0 4px var(--neon-pink);
		}
		97% {
			opacity: 1;
			box-shadow: 
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink);
		}
		98% {
			opacity: 0.9;
		}
		99% {
			opacity: 1;
		}
	}
	
	@keyframes blue-neon-glow {
		0% {
			text-shadow: 
				0 0 2px var(--neon-blue),
				0 0 4px var(--neon-blue),
				0 0 8px var(--neon-blue),
				0 0 12px var(--neon-blue),
				0 0 16px var(--neon-blue);
			filter: brightness(1);
		}
		25% {
			text-shadow: 
				0 0 1px var(--neon-blue),
				0 0 2px var(--neon-blue),
				0 0 4px var(--neon-blue),
				0 0 8px var(--neon-blue),
				0 0 12px var(--neon-blue);
			filter: brightness(0.9);
		}
		50% {
			text-shadow: 
				0 0 2px var(--neon-blue),
				0 0 4px var(--neon-blue),
				0 0 8px var(--neon-blue),
				0 0 12px var(--neon-blue),
				0 0 20px var(--neon-blue);
			filter: brightness(1.1);
		}
		75% {
			text-shadow: 
				0 0 1px var(--neon-blue),
				0 0 3px var(--neon-blue),
				0 0 6px var(--neon-blue),
				0 0 10px var(--neon-blue),
				0 0 14px var(--neon-blue);
			filter: brightness(0.95);
		}
		100% {
			text-shadow: 
				0 0 3px var(--neon-blue),
				0 0 6px var(--neon-blue),
				0 0 10px var(--neon-blue),
				0 0 15px var(--neon-blue),
				0 0 20px var(--neon-blue);
			filter: brightness(1.2);
		}
	}
	
	@keyframes pink-neon-glow {
		0% {
			text-shadow: 
				0 0 2px var(--neon-pink),
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink),
				0 0 16px var(--neon-pink);
			filter: brightness(1);
		}
		20% {
			text-shadow: 
				0 0 1px var(--neon-pink),
				0 0 2px var(--neon-pink),
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink);
			filter: brightness(0.85);
		}
		40% {
			text-shadow: 
				0 0 3px var(--neon-pink),
				0 0 6px var(--neon-pink),
				0 0 10px var(--neon-pink),
				0 0 15px var(--neon-pink),
				0 0 22px var(--neon-pink);
			filter: brightness(1.15);
		}
		60% {
			text-shadow: 
				0 0 1px var(--neon-pink),
				0 0 3px var(--neon-pink),
				0 0 6px var(--neon-pink),
				0 0 10px var(--neon-pink),
				0 0 14px var(--neon-pink);
			filter: brightness(0.9);
		}
		80% {
			text-shadow: 
				0 0 2px var(--neon-pink),
				0 0 5px var(--neon-pink),
				0 0 9px var(--neon-pink),
				0 0 14px var(--neon-pink),
				0 0 18px var(--neon-pink);
			filter: brightness(1.05);
		}
		100% {
			text-shadow: 
				0 0 4px var(--neon-pink),
				0 0 8px var(--neon-pink),
				0 0 12px var(--neon-pink),
				0 0 18px var(--neon-pink),
				0 0 24px var(--neon-pink);
			filter: brightness(1.3);
		}
	}
	
	.neon-text {
		color: var(--neutral-light);
		margin: 0.25rem 0;
	}
	
	.status-active {
		color: var(--accent-lime);
		text-shadow: 0 0 5px var(--accent-lime);
		font-weight: bold;
	}
	
	.highlight {
		color: var(--neon-blue);
		text-shadow: 0 0 5px var(--neon-blue);
	}
	
	.terminal-list {
		list-style: none;
		padding: 0;
		margin: 1rem 0;
	}
	
	.terminal-list li {
		margin: 0.5rem 0;
		color: var(--neutral-light);
	}
	
	.symbol {
		font-weight: bold;
		margin-right: 0.5rem;
		text-shadow: 0 0 5px currentColor;
	}
	
	.symbol.neon-blue { color: var(--neon-blue); }
	.symbol.accent-lime { color: var(--accent-lime); }
	.symbol.neon-pink { color: var(--neon-pink); }
	.symbol.accent-purple { color: var(--accent-purple); }
	.symbol.warning { color: var(--warning); }
	
	.directory-listing {
		font-family: 'Courier New', monospace;
		color: var(--neutral-mid);
		margin: 0.25rem 0;
	}
	
	.file-link {
		color: var(--neon-blue);
		text-decoration: none;
		transition: all 0.3s ease;
	}
	
	.file-link:hover {
		color: var(--neon-pink);
		text-shadow: 0 0 8px currentColor;
	}
	
	.cursor-blink {
		animation: blink 1s infinite;
	}
	
	.cursor {
		color: var(--accent-lime);
		animation: blink 1s infinite;
		font-weight: bold;
	}
	
	.loading-text {
		color: var(--neutral-mid);
		animation: loading-dots 2s infinite;
	}
	
	@keyframes loading-dots {
		0%, 20% {
			color: var(--neutral-mid);
			transform: translateY(0);
		}
		40% {
			color: var(--neon-blue);
			transform: translateY(-1px);
		}
		60% {
			color: var(--accent-lime);
			transform: translateY(0);
		}
		80%, 100% {
			color: var(--neutral-mid);
			transform: translateY(0);
		}
	}
	
	/* Smooth fade-in for outputs */
	.output {
		opacity: 0;
		animation: fade-in 0.5s ease-in forwards;
	}
	
	@keyframes fade-in {
		to {
			opacity: 1;
		}
	}
	
	/* Enhanced typing effects */
	.command {
		color: var(--accent-lime);
		margin-left: 0.5rem;
		display: inline-block;
	}
	
	/* Make the neon glow more prominent on interactive elements */
	.file-link:hover {
		color: var(--neon-pink);
		text-shadow: 
			0 0 5px currentColor,
			0 0 10px currentColor,
			0 0 15px currentColor;
		transition: all 0.3s ease;
	}
	
	/* Add a subtle glow effect to the about.txt click handler */
	.file-link[onclick] {
		cursor: pointer;
		transition: all 0.3s ease;
	}
	
	.file-link[onclick]:hover {
		color: var(--warning);
		text-shadow: 
			0 0 5px var(--warning),
			0 0 10px var(--warning);
	}
	
	.typing-animation {
		overflow: hidden;
		border-right: 2px solid var(--accent-lime);
		white-space: nowrap;
		animation: typing 2s steps(6, end), blink-caret 1s step-end infinite;
	}
	
	@keyframes blink {
		0%, 50% { opacity: 1; }
		51%, 100% { opacity: 0; }
	}
	
	@keyframes typing {
		from { width: 0; }
		to { width: 6ch; }
	}
	
	@keyframes blink-caret {
		from, to { border-color: transparent; }
		50% { border-color: var(--accent-lime); }
	}
	
	.about-section p {
		margin: 0.5rem 0;
	}
	
	.system-section {
		border-left: 2px solid rgba(0, 255, 127, 0.3);
		padding-left: 1rem;
	}
	
	.system-section p {
		margin: 0.3rem 0;
		font-family: 'Courier New', monospace;
		font-size: 0.9em;
	}
	
	.interests-section {
		border-left: 2px solid rgba(0, 255, 127, 0.3);
	}
	
	.interests-section .about-content h2 {
		color: var(--neon-blue);
	}
	
	.about-content h2 {
		font-size: 1.5em;
		margin: 1rem 0 0.5rem 0;
		text-shadow: 0 0 15px currentColor;
	}
	
	.neon-glow-blue {
		color: var(--neon-blue);
		text-shadow: 0 0 15px var(--neon-blue);
	}
	
	.about-content strong {
		color: var(--neon-blue);
		text-shadow: 0 0 5px var(--neon-blue);
	}
	
	@media (max-width: 768px) {
		.terminal-container {
			padding: 1rem 0.5rem;
		}
		
		.terminal-window {
			font-size: 12px;
		}
		
		.sign-text {
			font-size: 2rem;
			letter-spacing: 0.2rem;
		}
		
		.neon-line {
			max-width: 280px;
		}
		
		.terminal-body {
			padding: 1rem;
		}
	}
</style>
